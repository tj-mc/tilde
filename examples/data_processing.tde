# Advanced Data Processing with for-each
# Real-world examples of using for-each for data analysis

say "📊 Advanced Data Processing Examples"
say "====================================="

# Example 1: Log file analysis simulation
say ""
say "1. Log File Analysis:"
~log_entries is [
    {"level": "INFO", "message": "System started", "timestamp": "10:00:01"},
    {"level": "ERROR", "message": "Database connection failed", "timestamp": "10:00:15"},
    {"level": "INFO", "message": "User login successful", "timestamp": "10:01:23"},
    {"level": "WARNING", "message": "High memory usage", "timestamp": "10:02:10"},
    {"level": "ERROR", "message": "Payment processing failed", "timestamp": "10:03:45"}
]

~error_count is 0
~warning_count is 0
~info_count is 0

for-each ~entry in ~log_entries (
    if ~entry.level == "ERROR" (
        ~error_count up 1
        say "   🔴 ERROR at " ~entry.timestamp ": " ~entry.message
    ) else if ~entry.level == "WARNING" (
        ~warning_count up 1
        say "   🟡 WARNING at " ~entry.timestamp ": " ~entry.message
    ) else (
        ~info_count up 1
    )
)

say ""
say "   Summary:"
say "   - Errors: " ~error_count
say "   - Warnings: " ~warning_count
say "   - Info messages: " ~info_count

# Example 2: E-commerce order processing
say ""
say "2. E-commerce Order Processing:"
~orders is [
    {"id": "ORD-001", "items": ["laptop", "mouse"], "total": 1024, "status": "pending"},
    {"id": "ORD-002", "items": ["book", "pen"], "total": 35, "status": "shipped"},
    {"id": "ORD-003", "items": ["phone", "case", "charger"], "total": 850, "status": "delivered"},
    {"id": "ORD-004", "items": ["tablet"], "total": 299, "status": "pending"}
]

~pending_orders is []
~total_pending_amount is 0
~shipped_count is 0

for-each ~order in ~orders (
    if ~order.status == "pending" (
        ~pending_orders is append ~pending_orders ~order.id
        ~total_pending_amount up ~order.total

        ~item_count is length ~order.items
        say "   📦 " ~order.id " (Pending): " ~item_count " items, $" ~order.total
    ) else if ~order.status == "shipped" (
        ~shipped_count up 1
        say "   🚚 " ~order.id " (Shipped): $" ~order.total
    ) else (
        say "   ✅ " ~order.id " (Delivered): $" ~order.total
    )
)

say ""
say "   Pending Orders Summary:"
say "   - Count: " (length ~pending_orders)
say "   - Total Value: $" ~total_pending_amount
say "   - Orders: " ~pending_orders

# Example 3: Survey data analysis
say ""
say "3. Survey Response Analysis:"
~survey_responses is [
    {"age": 25, "satisffunction": 8, "department": "Engineering"},
    {"age": 34, "satisffunction": 9, "department": "Marketing"},
    {"age": 28, "satisffunction": 6, "department": "Engineering"},
    {"age": 31, "satisffunction": 7, "department": "Sales"},
    {"age": 29, "satisffunction": 9, "department": "Marketing"},
    {"age": 26, "satisffunction": 5, "department": "Sales"}
]

~total_satisffunction is 0
~engineering_responses is 0
~young_employees is 0
~response_count is 0

for-each ~response in ~survey_responses (
    ~total_satisffunction up ~response.satisffunction
    ~response_count up 1

    if ~response.department == "Engineering" (
        ~engineering_responses up 1
    )

    if ~response.age < 30 (
        ~young_employees up 1
    )

    say "   👤 Age: " ~response.age " | Satisffunction: " ~response.satisffunction "/10 | Dept: " ~response.department
)

~average_satisffunction is ~total_satisffunction / ~response_count

say ""
say "   Analysis Results:"
say "   - Average Satisffunction: " ~average_satisffunction "/10"
say "   - Engineering Responses: " ~engineering_responses "/" ~response_count
say "   - Employees Under 30: " ~young_employees "/" ~response_count

# Example 4: Inventory management
say ""
say "4. Inventory Management:"
~inventory is [
    {"sku": "LAP001", "name": "Gaming Laptop", "quantity": 5, "price": 1299, "category": "Electronics"},
    {"sku": "MOU002", "name": "Wireless Mouse", "quantity": 0, "price": 45, "category": "Electronics"},
    {"sku": "BOO003", "name": "Programming Book", "quantity": 12, "price": 59, "category": "Books"},
    {"sku": "CHA004", "name": "USB Charger", "quantity": 2, "price": 25, "category": "Electronics"}
]

~low_stock_items is []
~out_of_stock_items is []
~total_inventory_value is 0

say "   📋 Inventory Status:"
for-each ~item in ~inventory (
    ~item_value is ~item.quantity * ~item.price
    ~total_inventory_value up ~item_value

    if ~item.quantity == 0 (
        ~out_of_stock_items is append ~out_of_stock_items ~item.sku
        say "   ❌ " ~item.name " (" ~item.sku ") - OUT OF STOCK"
    ) else if ~item.quantity < 5 (
        ~low_stock_items is append ~low_stock_items ~item.sku
        say "   ⚠️  " ~item.name " (" ~item.sku ") - LOW STOCK: " ~item.quantity " units"
    ) else (
        say "   ✅ " ~item.name " (" ~item.sku ") - " ~item.quantity " units available"
    )
)

say ""
say "   📊 Inventory Summary:"
say "   - Total Value: $" ~total_inventory_value
say "   - Low Stock Items: " (length ~low_stock_items)
say "   - Out of Stock Items: " (length ~out_of_stock_items)

if (length ~out_of_stock_items) > 0 (
    say "   - Reorder Needed: " ~out_of_stock_items
)

say ""
say "🎯 for-each enables powerful data analysis workflows!"
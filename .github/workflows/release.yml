name: Release Builds

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.1.0)'
        required: true
        default: 'v0.5.1'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x64
          - os: windows-2022
            target: x86_64-pc-windows-gnu
            name: windows-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation tools (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-mingw-w64

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create release directory
      shell: bash
      run: |
        mkdir -p release
        cd release

        # Determine binary name
        if [[ "${{ matrix.target }}" == *"windows"* ]]; then
          BINARY_NAME="tilde.exe"
        else
          BINARY_NAME="tilde"
        fi

        # Copy binary
        cp ../target/${{ matrix.target }}/release/$BINARY_NAME ./

        # Copy documentation
        cp ../README.md ./ 2>/dev/null || echo "README.md not found"
        cp ../LICENSE ./ 2>/dev/null || echo "LICENSE not found"
        cp ../docs/SYNTAX.md ./ 2>/dev/null || echo "SYNTAX.md not found"

        # Copy examples if they exist
        if [ -d "../examples" ]; then
          cp -r ../examples ./
        fi

    - name: Create archive
      shell: bash
      run: |
        cd release
        if [[ "${{ matrix.target }}" == *"windows"* ]]; then
          7z a ../tilde-${{ github.ref_name }}-${{ matrix.name }}.zip .
        else
          tar -czf ../tilde-${{ github.ref_name }}-${{ matrix.name }}.tar.gz .
        fi

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: tilde-${{ matrix.name }}
        path: |
          *.zip
          *.tar.gz

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Tilde ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          **/*.zip
          **/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
